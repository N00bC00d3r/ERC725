** Getting abi for a contract deployed in truffle **

const fs = require('fs');
const contract = JSON.parse(fs.readFileSync('./build/contracts/ClaimHolder.json', 'utf8'));
console.log(JSON.stringify(contract.abi));

--------------------------------------------------------------------------------------------------------------------------


** Getting contract instance from its address using abi **

MyContract = web3.eth.contract(abi).at(contractAdress);

-----------------------------------------------------------------------------------------------------------------------------

** Preparing the Signature **

var Web3=require('web3');
web3=new Web3(new Web3.providers.HttpProvider("http://localhost:7545"));

var hexedData=web3.utils.asciiToHex("This is a text!"); // for version 0.20.6 -> [ web3.fromAscii("This is a text!") ];
var hashedDataToSign=web3.utils.soliditySha3('address',1,hexedData);
var signature=await web3.eth.sign(hashedDataToSign,'address');

---------------------------------------------------------------------------------------------------------------------------------

** web3.eth.accounts is deprecated instead use web3.eth.getAccounts() which will return a promise **

web3.eth.getAccounts().then(function(inst){
  accounts=inst;
});

----------------------------------------------------------------------------------------------------------------------------------
claimer.getHashed(accounts[5]).then(function(i){           claimer.addKey(i,3,1,{from: accounts[2]})})
